// 2D .mcpack generation
async function imageFileToPngBlob(file) {
  // Converts any image file to PNG Blob, preserving transparency if possible
  return new Promise((resolve, reject) => {
    const img = new Image();
    img.onload = function() {
      const canvas = document.createElement('canvas');
      canvas.width = img.width;
      canvas.height = img.height;
      const ctx = canvas.getContext('2d');
      ctx.clearRect(0, 0, canvas.width, canvas.height);
      ctx.drawImage(img, 0, 0);
      canvas.toBlob(blob => resolve(blob), 'image/png');
    };
    img.onerror = reject;
    img.src = URL.createObjectURL(file);
  });
}

async function getImagePngBlobFromInput(inputId) {
  // Returns PNG Blob for the file input (after cropping if applied)
  const input = document.getElementById(inputId);
  if (!input.files || !input.files[0]) return null;
  const file = input.files[0];
  // If file is already PNG, just use it; else convert
  if (file.type === "image/png") return file;
  return await imageFileToPngBlob(file);
}

async function handle2DPackSubmit(e) {
  e.preventDefault();
  const packName = document.getElementById('packName').value.trim() || "Xilillusion's Totem";
  const packDescription = document.getElementById('packDescription').value.trim() || "Generated by §l§aXilillusion§l§f's Totem Maker";
  let safePackName = packName.replace(/[^a-zA-Z0-9 _\-\.']/g, '_');
  if (!safePackName) safePackName = "Xilillusion's Totem";
  const mcpackName = safePackName + ".mcpack";

  // Prepare files for zip
  const zip = new JSZip();

  // Totem image (required)
  const totemPngBlob = await getImagePngBlobFromInput('imageInput');
  if (!totemPngBlob) {
    alert("No totem image selected.");
    return;
  }
  zip.file("textures/items/totem.png", totemPngBlob);

  // Icon (optional, fallback to totem if not provided)
  const iconInput = document.getElementById('iconInput');
  let iconPngBlob = null;
  if (iconInput.files && iconInput.files[0]) {
    iconPngBlob = await getImagePngBlobFromInput('iconInput');
  } else {
    // Use totem image as icon if icon not provided
    iconPngBlob = totemPngBlob;
  }
  zip.file("pack_icon.png", iconPngBlob);

  // manifest.json
  const manifest = {
    "format_version": 2,
    "header": {
      "description": packDescription,
      "name": packName,
      "uuid": uuidv4(),
      "version": [1, 0, 0],
      "min_engine_version": [1, 16, 0]
    },
    "modules": [
      {
        "description": "Generated by §l§aXilillusion§f's Totem Maker: https://github.com/Xilillusion/Minecraft-BE-Totem-Maker.git ",
        "type": "resources",
        "uuid": uuidv4(),
        "version": [1, 0, 0]
      }
    ]
  };
  zip.file("manifest.json", JSON.stringify(manifest, null, 2));

  // Generate zip and trigger download
  const blob = await zip.generateAsync({type: "blob"});
  const a = document.createElement('a');
  const url = window.URL.createObjectURL(blob);
  a.href = url;
  a.download = mcpackName;
  document.body.appendChild(a);
  a.click();
  setTimeout(() => {
    window.URL.revokeObjectURL(url);
    document.body.removeChild(a);
  }, 100);
}

// Expose for dynamic use
window.handle2DPackSubmit = handle2DPackSubmit;

// Attach submit handler when script is loaded (2D mode)
document.addEventListener('DOMContentLoaded', function() {
  const form = document.getElementById('uploadForm');
  if (form) {
    form.addEventListener('submit', handle2DPackSubmit);
  }
});