// 2D .mcpack generation
async function handle2DPackSubmit(e) {
  e.preventDefault();
  const packName = document.getElementById('packName').value.trim() || "Xilillusion's Totem";
  const packDescription = document.getElementById('packDescription').value.trim() || "Generated by §l§aXilillusion§l§f's Totem Maker";
  let safePackName = packName.replace(/[^a-zA-Z0-9 _\-\.']/g, '_');
  if (!safePackName) safePackName = "Xilillusion's Totem";
  const mcpackName = safePackName + ".mcpack";

  // Prepare files for zip
  const zip = new JSZip();

  // Totem image (required)
  const totemPngBlob = await getImagePngBlobFromInput('imageInput');
  if (!totemPngBlob) {
    showPopup("noTotemImage");
    return;
  }
  zip.file("textures/items/totem.png", totemPngBlob);

  // Icon (optional, fallback to totem if not provided)
  const iconInput = document.getElementById('iconInput');
  let iconPngBlob = null;
  if (iconInput.files && iconInput.files[0]) {
    iconPngBlob = await getImagePngBlobFromInput('iconInput');
  } else {
    // Use totem image as icon if icon not provided
    iconPngBlob = totemPngBlob;
  }
  zip.file("pack_icon.png", iconPngBlob);

  // manifest.json
  const manifest = {
    "format_version": 2,
    "header": {
      "description": packDescription,
      "name": packName,
      "uuid": uuidv4(),
      "version": [1, 0, 0],
      "min_engine_version": [1, 16, 0]
    },
    "modules": [
      {
        "description": "Generated by §l§aXilillusion§f's Totem Maker",
        "type": "resources",
        "uuid": uuidv4(),
        "version": [1, 0, 0]
      }
    ],
    "metadata": {
        "authors": [
            "Xilillusion"
        ],
        "license": "GPL-3.0",
        "url": "https://github.com/Xilillusion/Minecraft-BE-Totem-Maker.git"
    }
  };
  zip.file("manifest.json", JSON.stringify(manifest, null, 2));

  // Generate zip and trigger download
  const blob = await zip.generateAsync({type: "blob"});
  const a = document.createElement('a');
  const url = window.URL.createObjectURL(blob);
  a.href = url;
  a.download = mcpackName;
  document.body.appendChild(a);
  a.click();
  setTimeout(() => {
    window.URL.revokeObjectURL(url);
    document.body.removeChild(a);
  }, 100);
}

// Expose for dynamic use
window.handle2DPackSubmit = handle2DPackSubmit;

// Attach submit handler when script is loaded (2D mode)
document.addEventListener('DOMContentLoaded', function() {
  const form = document.getElementById('uploadForm');
  if (form) {
    form.addEventListener('submit', handle2DPackSubmit);
  }
});